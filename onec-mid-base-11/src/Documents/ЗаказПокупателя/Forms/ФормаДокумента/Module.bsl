
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// МайоровАВ 240915 Начало доработки добавления полей для расчета скидки и контактых лиц --
	//Будут добавлены поля д_СогласованнаяСкидка, команда ОбновитьТаблицу и поле д_КонтактноеЛицо
	// Работы по занятию "Командная работа (EDT)"
	
	ГруппаДатаНомер = Элементы.Добавить("ГруппаСкидкаПересчитать", Тип("ГруппаФормы"),Элементы.ГруппаШапкаЛево);
	ГруппаДатаНомер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаДатаНомер.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаДатаНомер.ОтображатьЗаголовок = ЛОЖЬ; 
	ГруппаДатаНомер.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	
	Элм = Элементы.Добавить("д_СогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаСкидкаПересчитать);
	Элм.Вид = ВидПоляФормы.ПолеВвода;
	Элм.Заголовок = "Согласованная скидка";
	Элм.ПутьКДанным = "Объект.д_СогласованнаяСкидка";
	Элм.УстановитьДействие("ПриИзменении", "ЗадатьВопросОбИзмененииАсинх");
	
	Элм = Элементы.Добавить("д_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	Элм.Вид = ВидПоляФормы.ПолеВвода;
	Элм.Заголовок = "Контактное лицо";
	Элм.ПутьКДанным = "Объект.д_КонтактноеЛицо"; 
	
	Команда = Команды.Добавить("ОбновитьТаблицу");
	Команда.Заголовок = "Обновить таблицу";
	Команда.Действие = "ОбновитьТаблицу"; 
	
	Элм = Элементы.Добавить("ОбновитьТаблицу", Тип("КнопкаФормы"), Элементы.ГруппаСкидкаПересчитать);
	Элм.Заголовок = "Обновить таблицу";
	Элм.ИмяКоманды = "ОбновитьТаблицу";
	Элм.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
	
	
	// -- МайоровАВ 240915 Конец доработки добавления поля контактых лиц
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область Дополнения

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	
	// МайоровАВ 240915 Доработка в рамках задания "Внесение изменений в конфигурацию на поддержке"
    // Команда запускает метод для пересчета скидки
	ПересчитатьСУчетомСкидки();
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗадатьВопросОбИзмененииАсинх() 
	
	// МайоровАВ 240915 Доработка в рамках задания "Внесение изменений в конфигурацию на поддержке"
	// Метод задает пользователю вопрос о пересчете таблицы, чтобы применить скидку
	
	Обещание = ВопросАсинх(НСтр("ru='Вы хотите применить скидку?'"), РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	Результат = Ждать Обещание; 
	
	Если Результат = КодВозвратаДиалога.Да Тогда         
		
		ПересчитатьСУчетомСкидки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСУчетомСкидки()
	
	// МайоровАВ 240915 Доработка в рамках задания "Внесение изменений в конфигурацию на поддержке"
	// Процедура пересчитывает каждую строки и итоги с учетом скидки

	Для Каждого Строка Из Объект.Товары Цикл

		ПересчитатьСтрокТоваровУслугСкидка(Строка);

	КонецЦикла;

	Для Каждого Строка Из Объект.Услуги Цикл

		ПересчитатьСтрокТоваровУслугСкидка(Строка);

	КонецЦикла;

	РассчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Процедура СообщениеОПривышенииСкидки() 
	 
	// МайоровАВ 240915 Доработки после обновления релиза
	// Сообщение о превышении скидки
	ОбщегоНазначенияКлиент.СообщитьПользователю("Просьба уменьшить скидку на товар или согласованную скидку, так как сумма скидок больше 100");
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокТоваровУслугСкидка(Знач Строка)
	
	Перем СуммаСкидок;
	
	СуммаСкидок = Строка.Скидка + Объект.д_СогласованнаяСкидка;
	
	Если СуммаСкидок > 100 Тогда
		СообщениеОПривышенииСкидки();
		Объект.д_СогласованнаяСкидка = 0;
		Возврат;			
	Иначе
		Строка.Сумма = Строка.Количество * (Строка.Цена - (Строка.Цена * (СуммаСкидок / 100)));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#КонецОбласти
